#!/bin/bash
# By graysky <graysky AT archlinux DOT us>
# Inspired by some code originally  written by Colin Verot

# nothing to do if there is no conf file
if [[ ! -f /etc/asd.conf ]]; then
	echo "Cannnot find /etc/asd.conf so bailing.  Reinstall package to use profile-sync-daemon."
	exit 0
else
	. /etc/asd.conf
fi

# nothing to do if these are empty
if [[ -z "${WHATTOSYNC[0]}" ]]; then
	echo "Must define at least one directory in the WHATTOSYNC array in /etc/asd.conf"
	exit 0
fi

[[ -z "$VOLATILE" ]] && VOLATILE="/dev/shm"
[[ -z "$PREFIX_PERMISSIONS" ]] && PREFIX_PERMISSIONS=700

DAEMON_FILE="/run/daemons/asd"

sync() {
	touch "$DAEMON_FILE"
	# sync profiles to tmpfs and back again
	local STATIC LINK
	for i in "${WHATTOSYNC[@]}"; do
		STATIC="$i-backup_asd"  # this is the hdd bound backup in case of power failure
		LINK="$i" # this is the name of the symlink

		# check if target is a directory
		if [[ -d $LINK ]]; then
			USER=$(/usr/bin/stat -c %U "$i")
			[[ -d "$VOLATILE$i" ]] || su -c "install -dm$PREFIX_PERMISSIONS '$VOLATILE$i'" $USER

			# backup targets and link to tmpfs
			if [[ "$(readlink "$LINK")" != "$VOLATILE$i" ]]; then
				mv "$LINK" "$STATIC"
				ln -s "$VOLATILE$i" "$LINK"
			fi

			# sync the RAM targets to the disc
			if [[ -e "$LINK/.flagged" ]]; then
				if [[ -e $LINK/.flagged ]]; then
					su -c "rsync -a --delete --exclude .flagged '$LINK/' '$STATIC/'" $USER
				else
					su -c "rsync -a '$STATIC/' '$LINK/'" $USER
					su -c "touch '$LINK/.flagged'" $USER
				fi
			fi
		fi
	done
}

check() {
	# crash recovery
	local i STATIC LINK
	for i in "${WHATTOSYNC[@]}"; do
		STATIC="$i-backup_asd"  # this is the hdd bound backup in case of power failure
		LINK="$i" # this is the name of the symlink
		if [[ ! -e "$VOLATILE$i/.flagged" ]]; then
			[[ -h "$LINK" ]] && rm -f "$LINK"
			[[ -d "$STATIC" ]] && mv "$STATIC" "$LINK"
		fi
	done
}

unsync() {
	local i STATIC LINK
	for i in "${WHATTOSYNC[@]}"; do
		STATIC="$i-backup_asd"  # this is the hdd bound backup in case of power failure
		LINK="$i" # this is the name of the symlink

		# check if target is there
		if [[ -h "$LINK" ]]; then
			rm -f "$LINK"
			[[ -d "$STATIC" ]] && mv "$STATIC" "$LINK"
			[[ -d "$VOLATILE$i" ]] && rm -rf "$VOLATILE$i"
		fi
	done

	rm -f -- "$DAEMON_FILE"
}

case "$1" in
	check)
		# do not run if the daemon is running
		[[ ! -f $DAEMON_FILE ]] && check
		;;
	sync)
		sync
		;;
	unsync)
		# make sure the daemon is running
		[[ -f $DAEMON_FILE ]] && sync && unsync
		;;
	*) 
		echo -en "\E[31musage: $0 {sync}"
		tput sgr0 # reset colors to normal
		echo
		echo "sync) force a manual sync"
		;;
esac
exit 0
